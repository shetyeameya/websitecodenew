{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ameyashetye/Desktop/websitecodenew/src/PokemonGo/Pokemongonew.js\";\nimport React, { Component } from 'react';\nimport { Row, Card } from 'antd';\nimport Pokemonlist from './PokemonList';\nimport './pokego.css';\n\nvar Pokemongo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Pokemongo, _Component);\n\n  function Pokemongo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Pokemongo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Pokemongo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isLoading: true,\n      Pokemon: []\n    };\n    _this.handlePokemons =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var details;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              details = [];\n              Pokemonlist.map(\n              /*#__PURE__*/\n              function () {\n                var _ref2 = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee(Pokemonlist) {\n                  var url, response, pokedata;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          url = \"https://pokeapi.co/api/v2/pokemon/\".concat(Pokemonlist.name);\n                          _context.next = 3;\n                          return fetch(url);\n\n                        case 3:\n                          response = _context.sent;\n                          _context.next = 6;\n                          return response.json();\n\n                        case 6:\n                          pokedata = _context.sent;\n\n                          if (pokedata !== undefined) {\n                            details.push({\n                              name: pokedata.species.name,\n                              moves: pokedata.moves,\n                              types: pokedata.types,\n                              weight: pokedata.weight,\n                              abilities: pokedata.abilities[0].ability\n                            });\n                          }\n\n                          _context.next = 10;\n                          return _this.setState({\n                            Pokemon: details,\n                            isLoading: false\n                          });\n\n                        case 10:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function (_x) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n              console.log(_this.state.Pokemon);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Pokemongo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handlePokemons();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Pokemon = this.state.Pokemon;\n\n      if (this.state.isLoading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"is loading ......\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"pok\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Row, {\n        type: \"flex\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, Pokemon.map(function (pokemon) {\n        return React.createElement(Card, {\n          className: \"textAlign\",\n          style: {\n            fontSize: 14,\n            color: 'rgba(0, 0, 0, 0.85)',\n            marginBottom: 16,\n            fontWeight: 500,\n            width: 300\n          },\n          hoverable: true,\n          title: pokemon.name.toUpperCase(),\n          cover: React.createElement(\"img\", {\n            alt: pokemon.name,\n            src: \"http://play.pokemonshowdown.com/sprites/xyani/\".concat(pokemon.name, \".gif\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          style: {\n            fontSize: 14,\n            color: 'rgba(0, 0, 0, 0.85)',\n            marginBottom: 25,\n            fontWeight: 500\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \"Type: \".concat(pokemon.types[0].type.name, \" \").concat(pokemon.types[1] !== undefined ? pokemon.types[1].type.name : '').toUpperCase()), React.createElement(Card, {\n          className: \"cardtext\",\n          type: \"inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"ABILITY: \", pokemon.abilities.name.toUpperCase()), React.createElement(Card, {\n          className: \"cardtext\",\n          type: \"inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"MOVES: \", pokemon.moves[0].move.name.toUpperCase()), React.createElement(Card, {\n          className: \"cardtext\",\n          type: \"inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"MOVES: \", \"\".concat(pokemon.moves[1] !== undefined ? pokemon.moves[1].move.name : 'N/A').toUpperCase()), React.createElement(Card, {\n          className: \"cardtext\",\n          type: \"inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"WEIGHT: \", pokemon.weight, \"lbs\"));\n      }))); // );\n    }\n  }]);\n\n  return Pokemongo;\n}(Component);\n\n;\nexport default Pokemongo;","map":{"version":3,"sources":["/Users/ameyashetye/Desktop/websitecodenew/src/PokemonGo/Pokemongonew.js"],"names":["React","Component","Row","Card","Pokemonlist","Pokemongo","state","isLoading","Pokemon","handlePokemons","details","map","url","name","fetch","response","json","pokedata","undefined","push","species","moves","types","weight","abilities","ability","setState","console","log","pokemon","fontSize","color","marginBottom","fontWeight","width","toUpperCase","type","move"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Row, Card} from 'antd';\nimport Pokemonlist from './PokemonList';\nimport './pokego.css'\n\n\n\n\nclass Pokemongo extends Component{\n    state = {\n        isLoading: true,\n        Pokemon:[]\n    }\n\n    componentDidMount() {\n        this.handlePokemons();\n    } \n\n    handlePokemons = async () => {\n        const details=[];\n        Pokemonlist.map(async (Pokemonlist) => {\n          const url= `https://pokeapi.co/api/v2/pokemon/${Pokemonlist.name}`;\n          const response= await fetch(url);\n          const pokedata= await response.json();\n          \n          if (pokedata !== undefined )\n          {\n            details.push({\n                name: pokedata.species.name,\n                moves:pokedata.moves,\n                types:pokedata.types, \n                weight:pokedata.weight, \n                abilities:pokedata.abilities[0].ability  \n              })\n          }\n          \n          await this.setState({Pokemon: details, isLoading:false})\n          \n        });\n       \n        console.log(this.state.Pokemon);\n    }\n    \n      \n    render(){\n        const { Pokemon} = this.state;\n        if (this.state.isLoading){\n            return(\n                <div>is loading ......</div>\n            );\n        }\n        \n        return (\n            <div className=\"pok\" >\n                \n            <Row type='flex' justify='center'>\n\n           \n           {Pokemon.map(pokemon => {\n                return (\n               <Card className=\"textAlign\"\n                style={{\n                fontSize: 14,\n                color: 'rgba(0, 0, 0, 0.85)',\n                marginBottom: 16,\n                fontWeight: 500,\n                width:300,\n                }}  \n                    hoverable\n                    title={pokemon.name.toUpperCase()}\n                    cover={<img alt={pokemon.name} src= {`http://play.pokemonshowdown.com/sprites/xyani/${pokemon.name}.gif`} />}>\n                    <p\n                        style={{\n                        fontSize: 14,\n                        color: 'rgba(0, 0, 0, 0.85)',\n                        marginBottom: 25,\n                        fontWeight: 500,\n                        }}  \n                    >\n                    {`Type: ${pokemon.types[0].type.name} ${pokemon.types[1] !== undefined ? pokemon.types[1].type.name : ''}`.toUpperCase()}\n                    </p>\n                    {/* <br /><br /> */}\n                     <Card className=\"cardtext\"\n                        type=\"inner\"\n                     >\n                     ABILITY: {pokemon.abilities.name.toUpperCase()}\n                     </Card>\n                     <Card className=\"cardtext\"\n                        type=\"inner\"\n                    >\n                    MOVES: {pokemon.moves[0].move.name.toUpperCase()}\n                    </Card>\n                    \n                    <Card className=\"cardtext\"\n                        type=\"inner\"\n                    >\n                    MOVES: {`${pokemon.moves[1] !== undefined ? pokemon.moves[1].move.name : 'N/A'}`.toUpperCase()}\n                    </Card>\n                     <Card className=\"cardtext\"\n                        type=\"inner\"\n                    >\n                    WEIGHT: {pokemon.weight}lbs\n                    </Card>\n                </Card>\n                )\n           })}\n            </Row>\n            \n            </div>\n            )\n        // );\n    }\n};\nexport default Pokemongo;"]},"metadata":{},"sourceType":"module"}