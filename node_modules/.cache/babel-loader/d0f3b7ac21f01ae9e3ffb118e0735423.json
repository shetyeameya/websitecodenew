{"ast":null,"code":"import _classCallCheck from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ameyashetye/Desktop/websitecodenew/src/pages/MacroCalculator.js\";\nimport React, { Component } from 'react';\nimport { Col, Row, Button, Form, Switch, Modal, Input, InputNumber, Rate, Icon } from 'antd';\nimport './MacroCalculator.css';\nimport PropTypes from 'prop-types';\nimport GetViewPort from '../hoc-helpers/GetViewPort';\nvar FormItem = Form.Item; // const { getFieldDecorator } = form;\n\nvar hasValidLength = function hasValidLength(value) {\n  return value.length > 1 && value.length < 3;\n};\n\nvar desc = ['SEDENTARY-limited exercise', 'LIGHTLY ACTIVE-light exercise less than three days per week', 'MODERATELY ACTIVE-moderate exercise most days of the week', 'VERY ACTIVE-hard exercise every day', 'EXTRA ACTIVE-strenuous exercise two or more times per day'];\n\nvar hasNumbersOnly = function hasNumbersOnly(value) {\n  var regex = /^[0-9]+$/;\n  return regex.test(value);\n};\n\nvar validateEntryPattern = function validateEntryPattern(value) {\n  return {\n    validLength: hasValidLength(value),\n    numbersOnly: hasNumbersOnly(value)\n  };\n}; //   const validateForNumber = value => {\n//     let message = '';\n//     if (value !== undefined) {\n//       const result = validateEntryPattern(value);\n//       if (!result.validLength) {\n//         message += 'Please check the value entered';\n//       }\n//       if (!result.numbersOnly) {\n//         message.length > 0 ? (message += ', numbers only') : (message += 'numbers only');\n//       }\n//       if (message.length > 0) {\n//         message += '.';\n//       }\n//     }\n//     return message;\n//   };\n\n\nvar MacroCalculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MacroCalculator, _Component);\n\n  function MacroCalculator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MacroCalculator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MacroCalculator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      years: '',\n      ft: '',\n      inch: '',\n      weight: '',\n      ratevalue: 3\n    };\n\n    _this.validateForNumber = function (value) {\n      var result = hasNumbersOnly(value);\n\n      if (result === true) {\n        //   callback(`Must contain ${result}`);\n        return true;\n      } // callback();\n\n\n      return false;\n    };\n\n    _this.handleChange = function (value) {\n      var isValid = _this.validateForNumber(value);\n\n      console.log(isValid);\n\n      if (isValid) {\n        _this.setState({\n          years: e.target.value\n        });\n      } else {\n        _this.setState({\n          years: \"\"\n        });\n      }\n    };\n\n    _this.handleChange1 = function (e) {\n      var isValid = _this.validateForNumber(e.target.value);\n\n      console.log(isValid);\n\n      if (isValid) {\n        _this.setState({\n          weight: e.target.value\n        });\n      } else {\n        _this.setState({\n          weight: \"\"\n        });\n      }\n    };\n\n    _this.handleChange2 = function (e) {\n      var isValid = _this.validateForNumber(e.target.value);\n\n      console.log(isValid);\n\n      if (isValid) {\n        _this.setState({\n          ft: e.target.value\n        });\n      } else {\n        _this.setState({\n          ft: \"\"\n        });\n      }\n    };\n\n    _this.handleChange3 = function (e) {\n      var isValid = _this.validateForNumber(e.target.value);\n\n      console.log(isValid);\n\n      if (isValid) {\n        _this.setState({\n          inch: e.target.value\n        });\n      } else {\n        _this.setState({\n          inch: \"\"\n        });\n      }\n    };\n\n    _this.handelratevalue = function (value) {\n      console.log(value);\n\n      _this.setState({\n        ratevalue: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MacroCalculator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var form = this.props.form;\n      console.log(this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var width = this.props.width;\n      var ratevalue = this.state.ratevalue;\n\n      if (width < 786) {\n        return React.createElement(\"div\", {\n          className: \"page\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: \"page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"MacroCalculator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Gender: \", React.createElement(Switch, {\n        checkedChildren: \"Male\",\n        unCheckedChildren: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Age:\", React.createElement(InputNumber, {\n        defaultValue: 100,\n        min: 0,\n        max: 100,\n        formatter: function formatter(value) {\n          return \"\".concat(value);\n        },\n        parser: function parser(value) {\n          return value.replace('%', '');\n        },\n        onChange: this.handleChange,\n        value: this.state.years,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Weight: \", React.createElement(Input, {\n        id: \"lbs\",\n        value: this.state.weight,\n        addonAfter: \"lbs\",\n        allowClear: true,\n        placeholder: \"Enter your weight here\",\n        onChange: this.handleChange1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Height:\", React.createElement(Input, {\n        id: \"ft\",\n        value: this.state.ft,\n        addonAfter: \"Ft\",\n        allowClear: true,\n        placeholder: \"Enter your height here\",\n        onChange: this.handleChange2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(Input, {\n        id: \"inch\",\n        value: this.state.inch,\n        addonAfter: \"inch\",\n        allowClear: true,\n        placeholder: \"Enter your height here\",\n        onChange: this.handleChange3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Select Exercise level: \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Rate, {\n        tooltips: desc,\n        onChange: this.handelratevalue,\n        value: this.state.ratevalue,\n        character: React.createElement(Icon, {\n          type: \"skin\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }),\n        style: {\n          fontSize: 30\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return MacroCalculator;\n}(Component);\n\n;\nMacroCalculator.propTypes = {\n  width: PropTypes.object\n};\nvar MacroCalculatorWithHOC = GetViewPort(MacroCalculator);\nexport default MacroCalculatorWithHOC;\n{\n  /* </Col>\n         <Col>\n             Weight:\n             <Input addonAfter=\"lbs\" allowClear placeholder=\"Enter your weight in lbs here\" />\n         </Col>\n         <Col>\n             Height:\n             <Col>\n                 <Col span={12}><Input addonAfter=\"Ft\" allowClear placeholder=\"Enter your Height in ft here\" /></Col>\n                 <Col span={12}><Input addonAfter=\"in\" allowClear placeholder=\"Enter your Height in inches here\" /></Col>\n             </Col>\n         </Col>\n      </Col>\n      <Col span={12}>Image</Col> */\n}","map":{"version":3,"sources":["/Users/ameyashetye/Desktop/websitecodenew/src/pages/MacroCalculator.js"],"names":["React","Component","Col","Row","Button","Form","Switch","Modal","Input","InputNumber","Rate","Icon","PropTypes","GetViewPort","FormItem","Item","hasValidLength","value","length","desc","hasNumbersOnly","regex","test","validateEntryPattern","validLength","numbersOnly","MacroCalculator","state","years","ft","inch","weight","ratevalue","validateForNumber","result","handleChange","isValid","console","log","setState","e","target","handleChange1","handleChange2","handleChange3","handelratevalue","form","props","width","replace","fontSize","propTypes","object","MacroCalculatorWithHOC"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Col, Row,Button,Form,Switch, Modal,Input,InputNumber, Rate, Icon } from 'antd'; \nimport './MacroCalculator.css'\nimport PropTypes from 'prop-types';\nimport GetViewPort from '../hoc-helpers/GetViewPort';\n \n\nconst FormItem = Form.Item;\n\n// const { getFieldDecorator } = form;\nconst hasValidLength = value => value.length > 1 && value.length < 3;\nconst desc = ['SEDENTARY-limited exercise',\n              'LIGHTLY ACTIVE-light exercise less than three days per week',\n              'MODERATELY ACTIVE-moderate exercise most days of the week',\n              'VERY ACTIVE-hard exercise every day', \n              'EXTRA ACTIVE-strenuous exercise two or more times per day' ]\n\nconst hasNumbersOnly = value => {\n  const regex = /^[0-9]+$/;\n\n  return regex.test(value);\n};\n\nconst validateEntryPattern = value => {\n    return {\n      validLength: hasValidLength(value),\n      numbersOnly: hasNumbersOnly(value),\n    };\n  };\n\n//   const validateForNumber = value => {\n//     let message = '';\n  \n//     if (value !== undefined) {\n//       const result = validateEntryPattern(value);\n  \n//       if (!result.validLength) {\n//         message += 'Please check the value entered';\n//       }\n//       if (!result.numbersOnly) {\n//         message.length > 0 ? (message += ', numbers only') : (message += 'numbers only');\n//       }\n//       if (message.length > 0) {\n//         message += '.';\n//       }\n//     }\n  \n//     return message;\n//   };\nclass MacroCalculator extends Component{ \nstate={\n    years : '',\n    ft : '',\n    inch : '',\n    weight: '',\n    ratevalue: 3,\n}\n    validateForNumber = (value) => {\n        const result = hasNumbersOnly(value);\n    \n        if (result === true) {\n        //   callback(`Must contain ${result}`);\n        return true;\n        }\n    \n        // callback();\n        return false;\n      };\n\n      componentDidMount() {\n          const {\n    form,\n  } = this.props;\n\n        console.log(this.props);\n    }\n\n    handleChange = (value) => {\n        const isValid = this.validateForNumber(value)\n        console.log(isValid)\n        if (isValid) {\n            this.setState({\n                years: e.target.value\n            })\n        }\n        else{\n            this.setState({\n                years:\"\"\n            })\n        }\n    }\n    handleChange1 = (e) => {\n        const isValid = this.validateForNumber(e.target.value)\n        console.log(isValid)\n        if (isValid) {\n            this.setState({\n                weight: e.target.value\n            })\n        }\n        else{\n            this.setState({\n                weight:\"\"\n            })\n        }\n    }\n    handleChange2 = (e) => {\n        const isValid = this.validateForNumber(e.target.value)\n        console.log(isValid)\n        if (isValid) {\n            this.setState({\n                ft: e.target.value\n            })\n        }\n        else{\n            this.setState({\n                ft:\"\"\n            })\n        }\n    }\n    handleChange3 = (e) => {\n        const isValid = this.validateForNumber(e.target.value)\n        console.log(isValid)\n        if (isValid) {\n            this.setState({\n                inch: e.target.value\n            })\n        }\n        else{\n            this.setState({\n                inch:\"\"\n            })\n        }\n    }\n    handelratevalue = (value) =>{\n        console.log(value)\n        this.setState({\n            ratevalue: value\n           \n        })\n        \n    }\n\n    render() { \n     const { width } = this.props; \n     const {ratevalue} = this.state;\n    if (width < 786) { \n    \n    return( \n    \n    <div className=\"page\"> \n    \n    </div> \n    \n    ); \n    \n    } \n    \n    \n    return( \n    \n    <div className=\"page\"> \n        <div className=\"form\">\n            <Col span={12}>\n                <Form className=\"form1\">\n                    <FormItem label=\"MacroCalculator\" >\n                        Gender: <Switch checkedChildren=\"Male\" unCheckedChildren=\"Female\" />\n                    </FormItem>  \n                   <FormItem>\n                        Age:<InputNumber\n                            defaultValue={100}\n                            min={0}\n                            max={100}\n                            formatter={value => `${value}`}\n                            parser={value => value.replace('%', '')}\n                            onChange={this.handleChange}\n                            value={this.state.years}\n                            /> \n                        {/* <Input  id='years' value={this.state.years} addonAfter=\"Yrs\" allowClear placeholder=\"Enter your age here\" onChange={this.handleChange}/> */}\n                    </FormItem>\n                    <FormItem>\n                        Weight: <Input  id='lbs' value={this.state.weight} addonAfter=\"lbs\" allowClear placeholder=\"Enter your weight here\" onChange={this.handleChange1}/>\n                    </FormItem>\n                    <FormItem>\n                        Height:\n                        <Input  id='ft' value={this.state.ft} addonAfter=\"Ft\" allowClear placeholder=\"Enter your height here\" onChange={this.handleChange2}/>\n                        <Input  id='inch' value={this.state.inch} addonAfter=\"inch\" allowClear placeholder=\"Enter your height here\" onChange={this.handleChange3}/>\n                    </FormItem>\n                    <FormItem >\n                        <Col>\n                            Select Exercise level: <span>\n                            <Rate  tooltips={desc} onChange={this.handelratevalue} value={this.state.ratevalue} character={<Icon type=\"skin\" />} style={{ fontSize: 30 }}/>\n                            </span> \n                        </Col>\n                     </FormItem>\n                    \n                           \n                    \n         </Form>\n         </Col>\n         </div>\n    </div> \n    \n    ); \n    \n    } \n    \n    }; \n    \n    MacroCalculator.propTypes = { \n    \n    width: PropTypes.object, \n    \n    }; \n    \n    const MacroCalculatorWithHOC = GetViewPort(MacroCalculator) \n    \n    export default MacroCalculatorWithHOC; \n\n    {/* </Col>\n            <Col>\n                Weight:\n                <Input addonAfter=\"lbs\" allowClear placeholder=\"Enter your weight in lbs here\" />\n            </Col>\n            <Col>\n                Height:\n                <Col>\n                    <Col span={12}><Input addonAfter=\"Ft\" allowClear placeholder=\"Enter your Height in ft here\" /></Col>\n                    <Col span={12}><Input addonAfter=\"in\" allowClear placeholder=\"Enter your Height in inches here\" /></Col>\n                </Col>\n            </Col>\n         </Col>\n         <Col span={12}>Image</Col> */}"]},"metadata":{},"sourceType":"module"}