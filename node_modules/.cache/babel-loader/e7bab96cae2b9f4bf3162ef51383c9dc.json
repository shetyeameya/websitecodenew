{"ast":null,"code":"import _classCallCheck from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ameyashetye/Desktop/websitecodenew/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ameyashetye/Desktop/websitecodenew/src/pages/MacroCalculator.js\";\nimport React, { Component } from 'react';\nimport { Form, Select, InputNumber, Switch, Radio, Slider, Button, Upload, Icon, Rate, Checkbox, Row, Col } from 'antd';\nimport './About.css';\nimport PropTypes from 'prop-types';\nimport GetViewPort from '../hoc-helpers/GetViewPort';\nvar Option = Select.Option;\n\nvar MacroCalculator =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MacroCalculator, _Component);\n\n  function MacroCalculator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MacroCalculator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MacroCalculator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log('Received values of form: ', values);\n        }\n      });\n    };\n\n    _this.normFile = function (e) {\n      console.log('Upload event:', e);\n\n      if (Array.isArray(e)) {\n        return e;\n      }\n\n      return e && e.fileList;\n    };\n\n    return _this;\n  }\n\n  _createClass(MacroCalculator, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var formItemLayout = {\n        labelCol: {\n          span: 6\n        },\n        wrapperCol: {\n          span: 14\n        }\n      };\n      return React.createElement(Form, Object.assign({}, formItemLayout, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(Form.Item, {\n        label: \"Plain Text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"ant-form-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"China\")), React.createElement(Form.Item, {\n        label: \"Select\",\n        hasFeedback: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, getFieldDecorator('select', {\n        rules: [{\n          required: true,\n          message: 'Please select your country!'\n        }]\n      })(React.createElement(Select, {\n        placeholder: \"Please select a country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"china\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"China\"), React.createElement(Option, {\n        value: \"usa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"U.S.A\")))), React.createElement(Form.Item, {\n        label: \"Select[multiple]\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, getFieldDecorator('select-multiple', {\n        rules: [{\n          required: true,\n          message: 'Please select your favourite colors!',\n          type: 'array'\n        }]\n      })(React.createElement(Select, {\n        mode: \"multiple\",\n        placeholder: \"Please select favourite colors\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Red\"), React.createElement(Option, {\n        value: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Green\"), React.createElement(Option, {\n        value: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Blue\")))), React.createElement(Form.Item, {\n        label: \"InputNumber\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, getFieldDecorator('input-number', {\n        initialValue: 3\n      })(React.createElement(InputNumber, {\n        min: 1,\n        max: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"ant-form-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \" machines\")), React.createElement(Form.Item, {\n        label: \"Switch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, getFieldDecorator('switch', {\n        valuePropName: 'checked'\n      })(React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, getFieldDecorator('slider')(React.createElement(Slider, {\n        marks: {\n          0: 'A',\n          20: 'B',\n          40: 'C',\n          60: 'D',\n          80: 'E',\n          100: 'F'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Radio.Group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, getFieldDecorator('radio-group')(React.createElement(Radio.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Radio, {\n        value: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"item 1\"), React.createElement(Radio, {\n        value: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"item 2\"), React.createElement(Radio, {\n        value: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"item 3\")))), React.createElement(Form.Item, {\n        label: \"Radio.Button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, getFieldDecorator('radio-button')(React.createElement(Radio.Group, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Radio.Button, {\n        value: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"item 1\"), React.createElement(Radio.Button, {\n        value: \"b\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"item 2\"), React.createElement(Radio.Button, {\n        value: \"c\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"item 3\")))), React.createElement(Form.Item, {\n        label: \"Checkbox.Group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, getFieldDecorator('checkbox-group', {\n        initialValue: ['A', 'B']\n      })(React.createElement(Checkbox.Group, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        value: \"A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"A\")), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        disabled: true,\n        value: \"B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"B\")), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        value: \"C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"C\")), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        value: \"D\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"D\")), React.createElement(Col, {\n        span: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        value: \"E\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"E\")))))), React.createElement(Form.Item, {\n        label: \"Rate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, getFieldDecorator('rate', {\n        initialValue: 3.5\n      })(React.createElement(Rate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }))), React.createElement(Form.Item, {\n        label: \"Upload\",\n        extra: \"longgggggggggggggggggggggggggggggggggg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, getFieldDecorator('upload', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.normFile\n      })(React.createElement(Upload, {\n        name: \"logo\",\n        action: \"/upload.do\",\n        listType: \"picture\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), \" Click to upload\")))), React.createElement(Form.Item, {\n        label: \"Dragger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dropbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, getFieldDecorator('dragger', {\n        valuePropName: 'fileList',\n        getValueFromEvent: this.normFile\n      })(React.createElement(Upload.Dragger, {\n        name: \"files\",\n        action: \"/upload.do\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"inbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        className: \"ant-upload-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"Click or drag file to this area to upload\"), React.createElement(\"p\", {\n        className: \"ant-upload-hint\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Support for a single or bulk upload.\"))))), React.createElement(Form.Item, {\n        wrapperCol: {\n          span: 12,\n          offset: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return MacroCalculator;\n}(Component);\n\nMacroCalculator.propTypes = {\n  width: PropTypes.object\n};\nvar WrappedDemo = Form.create({\n  name: 'validate_other'\n})();\nvar MacroCalculatorWithHOC = GetViewPort(MacroCalculator);\nexport default MacroCalculatorWithHOC;\n{\n  /* </Col>\n         <Col>\n             Weight:\n             <Input addonAfter=\"lbs\" allowClear placeholder=\"Enter your weight in lbs here\" />\n         </Col>\n         <Col>\n             Height:\n             <Col>\n                 <Col span={12}><Input addonAfter=\"Ft\" allowClear placeholder=\"Enter your Height in ft here\" /></Col>\n                 <Col span={12}><Input addonAfter=\"in\" allowClear placeholder=\"Enter your Height in inches here\" /></Col>\n             </Col>\n         </Col>\n      </Col>\n      <Col span={12}>Image</Col> */\n}","map":{"version":3,"sources":["/Users/ameyashetye/Desktop/websitecodenew/src/pages/MacroCalculator.js"],"names":["React","Component","Form","Select","InputNumber","Switch","Radio","Slider","Button","Upload","Icon","Rate","Checkbox","Row","Col","PropTypes","GetViewPort","Option","MacroCalculator","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","normFile","Array","isArray","fileList","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","rules","required","message","type","initialValue","valuePropName","width","getValueFromEvent","offset","propTypes","object","WrappedDemo","create","name","MacroCalculatorWithHOC"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Icon,\n    Rate,\n    Checkbox,\n    Row,\n    Col,} from 'antd'; \nimport './About.css'\nimport PropTypes from 'prop-types';\nimport GetViewPort from '../hoc-helpers/GetViewPort'\n\nconst { Option } = Select;\nclass MacroCalculator extends Component{ \n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            console.log('Received values of form: ', values);\n          }\n        });\n      };\n    \n      normFile = e => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n          return e;\n        }\n        return e && e.fileList;\n      };\n    \n      render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n          labelCol: { span: 6 },\n          wrapperCol: { span: 14 },\n        };\n        return (\n          <Form {...formItemLayout} onSubmit={this.handleSubmit}>\n            <Form.Item label=\"Plain Text\">\n              <span className=\"ant-form-text\">China</span>\n            </Form.Item>\n            <Form.Item label=\"Select\" hasFeedback>\n              {getFieldDecorator('select', {\n                rules: [{ required: true, message: 'Please select your country!' }],\n              })(\n                <Select placeholder=\"Please select a country\">\n                  <Option value=\"china\">China</Option>\n                  <Option value=\"usa\">U.S.A</Option>\n                </Select>,\n              )}\n            </Form.Item>\n    \n            <Form.Item label=\"Select[multiple]\">\n              {getFieldDecorator('select-multiple', {\n                rules: [\n                  { required: true, message: 'Please select your favourite colors!', type: 'array' },\n                ],\n              })(\n                <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\n                  <Option value=\"red\">Red</Option>\n                  <Option value=\"green\">Green</Option>\n                  <Option value=\"blue\">Blue</Option>\n                </Select>,\n              )}\n            </Form.Item>\n    \n            <Form.Item label=\"InputNumber\">\n              {getFieldDecorator('input-number', { initialValue: 3 })(<InputNumber min={1} max={10} />)}\n              <span className=\"ant-form-text\"> machines</span>\n            </Form.Item>\n    \n            <Form.Item label=\"Switch\">\n              {getFieldDecorator('switch', { valuePropName: 'checked' })(<Switch />)}\n            </Form.Item>\n    \n            <Form.Item label=\"Slider\">\n              {getFieldDecorator('slider')(\n                <Slider\n                  marks={{\n                    0: 'A',\n                    20: 'B',\n                    40: 'C',\n                    60: 'D',\n                    80: 'E',\n                    100: 'F',\n                  }}\n                />,\n              )}\n            </Form.Item>\n    \n            <Form.Item label=\"Radio.Group\">\n              {getFieldDecorator('radio-group')(\n                <Radio.Group>\n                  <Radio value=\"a\">item 1</Radio>\n                  <Radio value=\"b\">item 2</Radio>\n                  <Radio value=\"c\">item 3</Radio>\n                </Radio.Group>,\n              )}\n            </Form.Item>\n    \n            <Form.Item label=\"Radio.Button\">\n              {getFieldDecorator('radio-button')(\n                <Radio.Group>\n                  <Radio.Button value=\"a\">item 1</Radio.Button>\n                  <Radio.Button value=\"b\">item 2</Radio.Button>\n                  <Radio.Button value=\"c\">item 3</Radio.Button>\n                </Radio.Group>,\n              )}\n            </Form.Item>\n    \n            <Form.Item label=\"Checkbox.Group\">\n              {getFieldDecorator('checkbox-group', {\n                initialValue: ['A', 'B'],\n              })(\n                <Checkbox.Group style={{ width: '100%' }}>\n                  <Row>\n                    <Col span={8}>\n                      <Checkbox value=\"A\">A</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox disabled value=\"B\">\n                        B\n                      </Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox value=\"C\">C</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox value=\"D\">D</Checkbox>\n                    </Col>\n                    <Col span={8}>\n                      <Checkbox value=\"E\">E</Checkbox>\n                    </Col>\n                  </Row>\n                </Checkbox.Group>,\n              )}\n            </Form.Item>\n    \n            <Form.Item label=\"Rate\">\n              {getFieldDecorator('rate', {\n                initialValue: 3.5,\n              })(<Rate />)}\n            </Form.Item>\n    \n            <Form.Item label=\"Upload\" extra=\"longgggggggggggggggggggggggggggggggggg\">\n              {getFieldDecorator('upload', {\n                valuePropName: 'fileList',\n                getValueFromEvent: this.normFile,\n              })(\n                <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\n                  <Button>\n                    <Icon type=\"upload\" /> Click to upload\n                  </Button>\n                </Upload>,\n              )}\n            </Form.Item>\n    \n            <Form.Item label=\"Dragger\">\n              <div className=\"dropbox\">\n                {getFieldDecorator('dragger', {\n                  valuePropName: 'fileList',\n                  getValueFromEvent: this.normFile,\n                })(\n                  <Upload.Dragger name=\"files\" action=\"/upload.do\">\n                    <p className=\"ant-upload-drag-icon\">\n                      <Icon type=\"inbox\" />\n                    </p>\n                    <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                    <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                  </Upload.Dragger>,\n                )}\n              </div>\n            </Form.Item>\n    \n            <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        );\n      }\n    }\n    \n\n    MacroCalculator.propTypes = { \n    \n    width: PropTypes.object, \n    \n    \n    }; \n    const WrappedDemo = Form.create({ name: 'validate_other' })();\n    const MacroCalculatorWithHOC = GetViewPort(MacroCalculator) \n    \n    export default MacroCalculatorWithHOC; \n\n    {/* </Col>\n            <Col>\n                Weight:\n                <Input addonAfter=\"lbs\" allowClear placeholder=\"Enter your weight in lbs here\" />\n            </Col>\n            <Col>\n                Height:\n                <Col>\n                    <Col span={12}><Input addonAfter=\"Ft\" allowClear placeholder=\"Enter your Height in ft here\" /></Col>\n                    <Col span={12}><Input addonAfter=\"in\" allowClear placeholder=\"Enter your Height in inches here\" /></Col>\n                </Col>\n            </Col>\n         </Col>\n         <Col span={12}>Image</Col> */}"]},"metadata":{},"sourceType":"module"}